//////////////////////////////////////////////////////////////////////
v1.0.0
...Продолжение
- внести в базу данных таблицы data_stories дату создания(при создании) 
и дату изменения (при изменении) новой истории в колонку story_date
----------------------------------------------------------------------
( mission_complete+++ )

- создать объект-хранилище сообщений ошибок или же методов сразу добавляющих ошибку
в объект-настроек отправляемый после выполнения операции создания/изменения/удаления 
сюжета в файле workWithStoryAPI
----------------------------------------------------------------------
( mission_complete+++ )

- создать интерфейс удаления сюжета, состоящий из автоматически добавляющихся в каждое 
окно сюжета, подгружаемых с базы данных при наличии токена, квадратных кнопочек размером
приблизительно 40х40 или меньше в правый нижний угол с value="-", где "-" - является 
красным цветом; и которые при их нажатии выводят окно с текстом "Удалить сюжет?" и 
двумя кнопками "удалить сюжет" и "отмена".
При нажатии кнопки "удалить сюжет" - происходит переход на workWithStoryAPI, который
передает скрипту "value"кнопки и story_link, из базы данных, выбранного сюжета.
При нажатии кнопки "отмена" окно закрывается и может повторно открыться при нажатии 
кнопки "-".
----------------------------------------------------------------------
( mission_complete+++ )

- создать логику удаления выбранного сюжета, при которой просиходит по полученному 
story_link удаление строки базы данных с соответствующим сюжетом, и удаление файла
с кодом страницы сюжета.
----------------------------------------------------------------------
( mission_complete+++ )

- Доделать добавление коментарий админом и юзером
----------------------------------------------------------------------
( mission_complete+++ )

- Создать интерфейс и функционал удаления коментарий админом
----------------------------------------------------------------------
( mission_complete+++ )

- Создать интерфейс и функционал поиска сюжетов по тегам:
	
	(сделанно)
	1) флекс позиционирование контента отображения результата запроса
	2) запрос на сервер при отправке текста запроса из инпута 
	3) архитектуру объекта ответа от сервера
	4) функцию отображения первичных данных после отправки текста запроса
		(кнопки пагинации, колличество результирующих страничек)
	5) функцию отображения партии данных от сервера согласно пагинации текущей странички
	6) запрос на сервер при переходе на новую "страничку" погинации для получения н
		новой партии данных
	7) при первичном запросе:
		поиск данных в бд на стороне сервера, сортировка их в партии, 
		парсинг данных в временный файл. При этом после нового запроса
		временный файл переписывается.
	   при запросе от пагинации:
		извлечение из временного файла новой партии согласно пагинации выбранной
		странички.

	(осталось)
	 undefined			
----------------------------------------------------------------------
( mission_complete+++ )
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\








//////////////////////////////////////////////////////////////////////
Future:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

- Сделать кэш блоков результата запроса(без любого запроса к серверу)
через сессию при возврате "назад" к предыдущей странички в браузере.
----------------------------------------------------------------------
( not_status... )

- Сделать через сессию кэш якорной ссылки при возврате "назад" 
к предыдущей странички в браузере.
----------------------------------------------------------------------
( not_status... )

- Написать анонс на блоках с премьерами на странице премьеры фильмов
----------------------------------------------------------------------
( not_status... )

- Написать прелоадер или анимацию загрузки блокам результата поиска и кнопкам пагинации
----------------------------------------------------------------------
( not_status... )

- Проверить все переменные в $_SESSION, при необходимости переработать, избавив от потребности в сессии
учитывая то, что сайтом могут пользоваться одновременно множества человек. 
Так же стоит учитывать, что нельзя сохранять переменные которыми пользуктся
как пользовательская часть так и серверная часть(хз почему но мне так кажется, интуиция).
Так же необходимо переработать по нормальному систему токенов для админов(
это те самы if-фы(ифы), где: 
!is_null($dataRes_authorizatiionAdminAPI) 
&& $dataRes_authorizatiionAdminAPI["body"]["token"]=='admin1_token_id78633')
----------------------------------------------------------------------
( not_status... )

- Сделать кнопки очистки содержания блоков рядом с ними(anons, tags, description, file)(кроме названия сюжета)
----------------------------------------------------------------------
( not_status... )

- Вмонтировать трейлера в сюжеты (ютуб плееры)
----------------------------------------------------------------------
( not_status... )

- Переделать проверку админа на функцию и вызывать ее в нужных местах
----------------------------------------------------------------------
( not_status... )

- Сделать динамические якорные ссылки, при каком либо действии редирект должен происходить на последнюю 
якорную ссылку
----------------------------------------------------------------------
( not_status... )
